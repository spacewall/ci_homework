name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_and_deployment:

    runs-on: ubuntu-20.04
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASS: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
    services:
      postgres_db:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASS }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    strategy:
      max-parallel: 4

    steps:
      - name: Check repo
        uses: actions/checkout@v4

      - name: Python downloading
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Requirements downloading
        run: pip install -r requirements.txt

      - name: Testing
        run: pytest
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DEBUG: "0"
          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
          DB_NAME: ${{ env.POSTGRES_DB }}
          DB_USER: ${{ env.POSTGRES_USER }}
          DB_PASSWORD: ${{ env.POSTGRES_PASS }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_PORT: ${{ env.POSTGRES_PORT }}

      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: expect /home/spacewall/ci_homework/pull.exp
